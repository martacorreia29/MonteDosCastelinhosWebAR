{"ast":null,"code":"import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport fscreen from 'fscreen';\nfunction useFullScreenHandle() {\n  var _useState = useState(false),\n    active = _useState[0],\n    setActive = _useState[1];\n  var node = useRef(null);\n  useEffect(function () {\n    var handleChange = function handleChange() {\n      setActive(fscreen.fullscreenElement === node.current);\n    };\n    fscreen.addEventListener('fullscreenchange', handleChange);\n    return function () {\n      return fscreen.removeEventListener('fullscreenchange', handleChange);\n    };\n  }, []);\n  var enter = useCallback(function () {\n    if (fscreen.fullscreenElement) {\n      return fscreen.exitFullscreen().then(function () {\n        return fscreen.requestFullscreen(node.current);\n      });\n    } else if (node.current) {\n      return fscreen.requestFullscreen(node.current);\n    }\n  }, []);\n  var exit = useCallback(function () {\n    if (fscreen.fullscreenElement === node.current) {\n      return fscreen.exitFullscreen();\n    }\n    return Promise.resolve();\n  }, []);\n  return useMemo(function () {\n    return {\n      active: active,\n      enter: enter,\n      exit: exit,\n      node: node\n    };\n  }, [active, enter, exit]);\n}\nvar FullScreen = function FullScreen(_ref) {\n  var handle = _ref.handle,\n    onChange = _ref.onChange,\n    children = _ref.children,\n    className = _ref.className;\n  var classNames = [];\n  if (className) {\n    classNames.push(className);\n  }\n  classNames.push('fullscreen');\n  if (handle.active) {\n    classNames.push('fullscreen-enabled');\n  }\n  useEffect(function () {\n    if (onChange) {\n      onChange(handle.active, handle);\n    }\n  }, [handle.active]);\n  return React.createElement(\"div\", {\n    className: classNames.join(' '),\n    ref: handle.node,\n    style: handle.active ? {\n      height: '100%',\n      width: '100%'\n    } : undefined\n  }, children);\n};\nexport { FullScreen, useFullScreenHandle };","map":null,"metadata":{},"sourceType":"module"}