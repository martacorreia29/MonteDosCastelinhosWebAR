{"version":3,"sources":["resources/sondagem4 - smaller.glb","resources/logo2.PNG","resources/sondagem4.png","components/TopButtons/BackButton.js","components/TopButtons/FullScreenButton.js","components/TopButtons/TopButtons.js","components/TextButton.js","pages/Home/Home.js","pages/RealidadeVirtual/RealidadeVirtual.js","pages/RealidadeAumentada/RealidadeAumentada.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","BackButton","_ref","backUrl","React","createElement","Link","to","className","id","FontAwesomeIcon","icon","faArrowLeft","FullScreenButton","isFullScreen","console","log","_useState","useState","faDownLeftAndUpRightToCenter","faUpRightAndDownLeftFromCenter","_useState2","_slicedToArray","screenType","setScreenType","onClick","document","body","requestFullscreen","exitFullscreen","TopButtons","isHome","fullscreenElement","TextButton","text","Home","src","logo","alt","RealidadeVirtual","renderer","gltf-model","sondagem4Model","position","rotation","scale","camera","look-controls","RealidadeAumentada","userLat","userLng","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","vr-mode-ui","embedded","arjs","value","look-at","gps-entity-place","gps-camera","rotation-reader","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a12878ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sondagem4 - smaller.917f1ef6.glb\";","module.exports = __webpack_public_path__ + \"static/media/logo2.17ec77e9.PNG\";","module.exports = __webpack_public_path__ + \"static/media/sondagem4.b95b3712.png\";","import React from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from 'react-router-dom';\r\nimport \"../../index.css\"\r\n\r\nfunction BackButton({backUrl}) {\r\n  return (\r\n    <Link to={backUrl} className=\"nav-link\">\r\n      <button className=\"backBtn\" id=\"roundBtn\">\r\n        <FontAwesomeIcon icon={faArrowLeft}/>\r\n      </button>      \r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default BackButton;\r\n","import React from 'react';\r\nimport {useState} from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUpRightAndDownLeftFromCenter } from \"@fortawesome/free-solid-svg-icons\"; //full\r\nimport { faDownLeftAndUpRightToCenter } from \"@fortawesome/free-solid-svg-icons\"; //normal\r\n\r\nconst FullScreenButton = (isFullScreen) => {\r\n  console.log(isFullScreen.isFullScreen)\r\n  const [screenType, setScreenType] = useState(isFullScreen.isFullScreen ? faDownLeftAndUpRightToCenter : faUpRightAndDownLeftFromCenter);\r\n\r\n  function changeScreen() {\r\n    //normal -> full\r\n    if(screenType === faUpRightAndDownLeftFromCenter){\r\n      setScreenType(faDownLeftAndUpRightToCenter);\r\n      document.body.requestFullscreen();\r\n\r\n      //full -> normal\r\n    } else {\r\n      setScreenType(faUpRightAndDownLeftFromCenter);\r\n      document.exitFullscreen();\r\n    } \r\n  }\r\n\r\n  return (\r\n    <button className=\"fullScreenBtn\" id=\"roundBtn\">\r\n      <FontAwesomeIcon onClick={changeScreen} icon={screenType} />\r\n    </button>      \r\n  );\r\n}\r\n\r\nexport default FullScreenButton;\r\n","import React from 'react';\r\nimport BackButton from './BackButton';\r\nimport FullScreenButton from './FullScreenButton'\r\nimport \"./TopButtons.css\"\r\n\r\nfunction TopButtons({isHome, backUrl}) {\r\n  return (\r\n    <div className=\"topButtons\">\r\n      {!isHome &&\r\n      <BackButton backUrl={backUrl}/>}\r\n      <FullScreenButton isFullScreen={document.fullscreenElement != null} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopButtons;","import React from 'react';\r\nimport \"./TextButton.css\";\r\n\r\nconst TextButton = (text) => {\r\n  return (\r\n    <div className=\"textButton\">\r\n      <button id=\"textBtn\">{text.text}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextButton;\r\n","import React from 'react';\r\nimport logo from '../../resources/logo2.PNG';\r\nimport TopButtons from \"../../components/TopButtons/TopButtons.js\"\r\nimport TextButton from \"../../components/TextButton.js\"\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Home.css\"\r\nimport \"../../index.css\"\r\nimport \"@fontsource/lexend-deca\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\" id=\"home\">\r\n      <TopButtons isHome={true} />\r\n      <div className=\"content\">\r\n        <img src={logo} className=\"logo\" alt=\"logo\" />\r\n        <div className=\"menu\">\r\n          <Link to={'/ra'} className=\"nav-link\"><TextButton text=\"Realidade Aumentada\" /></Link>\r\n          <Link to={'/rv'} className=\"nav-link\"><TextButton text=\"Realidade Virtual\" /></Link>\r\n        </div>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\nexport default Home;","import React from 'react';\r\nimport TopButtons from \"../../components/TopButtons/TopButtons.js\"\r\nimport \"../../index.css\"\r\nimport \"./RealidadeVirtual.css\"\r\nimport sondagem4Model from '../../resources/sondagem4 - smaller.glb';\r\n\r\nfunction RealidadeVirtual() {\r\n  return (\r\n    <div className=\"RealidadeVirtual\">\r\n      <TopButtons backUrl={\"/MonteDosCastelinhosWebAR\"} />\r\n      <div className=\"content\">\r\n        <a-scene renderer=\"logarithmicDepthBuffer: true\">\r\n          <a-entity gltf-model={sondagem4Model} position=\"0 0 -10\" rotation=\"0 180 -6\" scale=\"0.5 0.5 0.5\"/>\r\n          <a-entity camera look-controls position=\"0 1.6 0\"/>\r\n        </a-scene>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\nexport default RealidadeVirtual;","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport TopButtons from \"../../components/TopButtons/TopButtons.js\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../../index.css\"\r\nimport \"./RealidadeAumentada.css\"\r\nimport sondagem4Img from '../../resources/sondagem4.png';\r\nimport sondagem4Model from '../../resources/sondagem4 - smaller.glb';\r\n\r\nfunction RealidadeAumentada() {\r\n  const [modelAligned, setModelAligned] = useState(false);\r\n  let userLat;\r\n  let userLng;\r\n\r\n  navigator.geolocation.getCurrentPosition(userLocation);\r\n  function userLocation(position) {\r\n    userLat = position.coords.latitude;\r\n    userLng = position.coords.longitude;\r\n    console.log(userLat +\" \" + userLng);\r\n}\r\n\r\n/**<a-scene renderer=\"logarithmicDepthBuffer: true; antialias: true; alpha: true\" vr-mode-ui='enabled: false'\r\n         embedded arjs='sourceType: webcam;'>\r\n          <a-text\r\n          value=\"This content will always face you.\"\r\n          look-at=\"[gps-camera]\"\r\n          scale=\"50 50 50\"\r\n          gps-entity-place={\"longitude: \" + userLng + \"; latitude: \" + userLat}\r\n          ></a-text>\r\n          <a-camera arjs-device-orientation-controls='smoothingFactor: 0.1' gps-camera rotation-reader/>\r\n\r\n            {false && \r\n              <div className=\"alignElements\">\r\n                <img className=\"alignImage\" src={sondagem4Img}/>\r\n                <button className=\"alignedBtn\" onClick={() => setModelAligned(true)}>\r\n                  Alinhado\r\n                  <FontAwesomeIcon icon=\"fa-solid fa-house\"/>\r\n                </button>  \r\n              </div>}\r\n            {false && \r\n              <a-entity id=\"totalModel\" gltf-model={sondagem4Model} position=\"0 -150 60\" rotation=\"0 0 0\" scale=\"1 1 1\" gps-new-entity-place={\"longitude: \" + userLng + \"; latitude: \" + userLat}/>}\r\n            {false && \r\n              <a-light type=\"directional\" id=\"light\" target=\"totalModel\" position=\"-2 4 2\"\r\n\t\t\t          light=\"castShadow: true; shadowMapHeight: 1024; shadowMapWidth: 1024; shadowCameraLeft: -7; shadowCameraRight: 5; shadowCameraBottom: -5; shadowCameraTop: 5;\"/>}\r\n        </a-scene> */\r\n\r\n  return (\r\n    <div className=\"RealidadeAumentada\">\r\n      <TopButtons backUrl={\"/MonteDosCastelinhosWebAR\"} />\r\n      <div className=\"content\">\r\n      <a-scene\r\n        vr-mode-ui=\"enabled: false\"\r\n        embedded\r\n        arjs=\"sourceType: webcam; debugUIEnabled: false;\">\r\n        <a-text\r\n          value=\"This content will always face you.\"\r\n          look-at=\"[gps-camera]\"\r\n          scale=\"50 50 50\"\r\n          gps-entity-place={\"longitude: \" + userLng + \"; latitude: \" + userLat +\";\"}></a-text>\r\n        <a-camera gps-camera rotation-reader> </a-camera>\r\n      </a-scene>\r\n      </div >\r\n    </div>\r\n  );\r\n}\r\nexport default RealidadeAumentada;","import React from 'react';\r\nimport './App.css';\r\n//import { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Home from \"./pages/Home/Home\"\r\nimport RealidadeVirtual from \"./pages/RealidadeVirtual/RealidadeVirtual\"\r\nimport RealidadeAumentada from \"./pages/RealidadeAumentada/RealidadeAumentada\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" id=\"app\">\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path='/' element={<Home />} />\r\n          <Route path='/MonteDosCastelinhosWebAR' element={<Home />} />\r\n          <Route path='/rv' element={<RealidadeVirtual />} />\r\n          <Route path='/ra' element={<RealidadeAumentada />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div >\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\nreportWebVitals();"],"sourceRoot":""}